@page "/"
@inject IBlogPostService BlogPostService
<PageTitle>Home</PageTitle>

<!--------------------------------------
HEADER
--------------------------------------->
@if (_firstFeatured is not null)
{
    <div class="container">
        <div class="jumbotron jumbotron-fluid mb-3 pt-0 pb-0 bg-lightblue position-relative">
            <div class="pl-4 pr-0 h-100 tofront">
                <div class="row justify-content-between">
                    <div class="col-md-6 pt-6 pb-6 align-self-center">
                        <h1 class="secondfont mb-3 font-weight-bold">
                            @_firstFeatured.Title
                        </h1>
                        <p class="mb-3">
                            @_firstFeatured.Introduction
                        </p>
                        <a href="./article.html" class="btn btn-dark">Read More</a>
                    </div>
                    <div class="col-md-6 d-none d-md-block pr-0"
                         style="background-size:cover;background-image:url(@_firstFeatured.Image);">
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<!-- End Header -->
<!--------------------------------------
MAIN
--------------------------------------->

<FeaturedBlogPostsList Posts="_featured" />

<div class="container">
    <div class="row justify-content-between">
        <div class="col-md-8">
            <h5 class="font-weight-bold spanborder"><span>Latest Posts</span></h5>
            <BlogPostList Posts="_recent" />
        </div>
        <PopularBlogPostsList Posts="_popular" />
    </div>
</div>
<!-- End MAIN -->
@code {
    private BlogPost[] _featured = [];
    private BlogPost[] _popular = [];
    private BlogPost[] _recent = []; //todo fix imports
    private BlogPost _firstFeatured = default;

    protected override async Task OnInitializedAsync()
    {
        var result = await Task.WhenAll(
            BlogPostService.GetFeaturedBlogPosts(5),
            BlogPostService.GetPopularBlogPosts(4),
            BlogPostService.GetRecentBlogPosts(5)
        );

        _featured = result[0];
        _popular = result[1];
        _recent = result[2];

        if (_featured.Length > 0)
        {
            _firstFeatured = _featured[0];
            _featured = _featured.Skip(1).ToArray();
        }

    }
}

